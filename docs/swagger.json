{
    "swagger": "2.0",
    "info": {
        "description": "This is the API of PPPoE",
        "title": "PPPoE API",
        "contact": {
            "name": "API Support",
            "email": "support@sea-shell.no"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/event/insert": {
            "put": {
                "security": [
                    {
                        "OAuth2Application": [
                            "write"
                        ]
                    }
                ],
                "description": "Insert new event with corresponding values",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Insert new event",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EventItemNoID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success when all goes well",
                        "schema": {
                            "$ref": "#/definitions/models.Status"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/event/list": {
            "get": {
                "description": "Get a list of event items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "List events",
                "parameters": [
                    {
                        "type": "string",
                        "default": "event name",
                        "description": "name search for event",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.ResponsePayload"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.EventItem"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/event/{event}/get": {
            "get": {
                "description": "Get event spessific to ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Get event with ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Unique ID of event you want to get",
                        "name": "event",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/models.EventItem"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get health status of application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Get application health",
                "responses": {
                    "200": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/models.Health"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.EventItem": {
            "type": "object",
            "properties": {
                "event_created": {
                    "type": "string"
                },
                "event_description": {
                    "type": "string"
                },
                "event_end": {
                    "type": "string"
                },
                "event_id": {
                    "type": "integer"
                },
                "event_location": {
                    "type": "string"
                },
                "event_name": {
                    "type": "string"
                },
                "event_organizer": {
                    "type": "string"
                },
                "event_start": {
                    "type": "string"
                }
            }
        },
        "models.EventItemNoID": {
            "type": "object",
            "properties": {
                "event_created": {
                    "type": "string"
                },
                "event_description": {
                    "type": "string"
                },
                "event_end": {
                    "type": "string"
                },
                "event_location": {
                    "type": "string"
                },
                "event_name": {
                    "type": "string"
                },
                "event_organizer": {
                    "type": "string"
                },
                "event_start": {
                    "type": "string"
                }
            }
        },
        "models.Health": {
            "type": "object",
            "properties": {
                "documentation": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "models.ResponsePayload": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "item_limit": {
                    "type": "integer"
                },
                "items": {},
                "next_page": {
                    "type": "string"
                },
                "prev_page": {
                    "type": "string"
                },
                "total_item_count": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "models.Status": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "APIKey": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "OAuth2Application": {
            "description": "OAuth protects our entity endpoints",
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://oauth2.googleapis.com/token",
            "scopes": {
                "admin": "Grants read and write access to administrative information",
                "read": "Grants read access",
                "write": "Grants read and write access"
            }
        }
    }
}